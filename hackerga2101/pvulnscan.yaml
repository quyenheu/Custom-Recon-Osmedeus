name: pvulnscan
desc: Run VulnSan & Dirbscan on Portscan result

report:
  final:
    - "{{Output}}/pdirectory/beautify-{{Workspace}}.txt"
    - "{{Output}}/vportscan/vuln/jaeles-report.html"
    - "{{Output}}/vportscan/vuln/jaeles-summary.txt"
    - "{{Output}}/vportscan/nuclei/{{Workspace}}-nuclei.html"
    - "{{Output}}/vportscan/vuln/nuclei/{{Workspace}}-nuclei-json.txt"
    - "{{Output}}/vportscan/vuln/nuclei/{{Workspace}}-nuclei.html"

params:
  - inputFile: "{{Output}}/portscan/{{Workspace}}-http.txt"
  - ffThreads: '{{ threads }}' # threads for single site
  - dirbThreads: '{{ threads / 3 }}'
  - wordlists: "{{Data}}/wordlists/content/small.txt"
  - sign: "~/.jaeles/base-signatures/cves/.*"
  - sign2: "~/.jaeles/base-signatures/common/.*"
  - lines: "20"
  - recursion: '0'
  - chan: '#mics'
  - nuclei: 'true'
  - nucleiThreads: '{{ threads * 10 }}'
  - jaelesThreads: '{{ threads * 5 }}'
  - nucleiTimeout: "8h"
  - jaelesTimeout: "8h"
  - ffTimeout: "2h"
  - nucleiSeverity: "critical,high,medium,low,info"
  - defaultUA: "User-Agent: Mozilla/5.0 (compatible; Osmedeus/v4; +https://github.com/j3ssie/osmedeus)"

pre_run:
  - CreateFolder("{{Output}}/pdirectory")
  - CreateFolder("{{Output}}/vportscan")

steps:
  # Jaeles Scan
  - required:
      - "{{Binaries}}/jaeles"
      - "{{inputFile}}"
    commands:
      - "timeout -k 1m {{jaelesTimeout}} {{Binaries}}/jaeles scan -c {{jaelesThreads}} -s '{{sign}}' -s '{{sign2}}' -U {{inputFile}} -o {{Output}}/vportscan/vuln/ {{extra}}"
    pconditions:
      - "FileLength('{{Output}}/vportscan/vuln/jaeles-summary.txt') > 0"
    scripts:
      - TeleMessByFile("#report", "{{Output}}/vportscan/vuln/jaeles-summary.txt")
      - Cat("{{Output}}/vportscan/vuln/jaeles-summary.txt")

  # nuclei scan
  - label: 'Run nuclei scan'
    conditions:
      - '"{{enableNuclei}}" == "true"'
    required:
      - "{{inputFile}}"
      - "{{Binaries}}/nuclei"
    scripts:
      - "CreateFolder('{{Output}}/vportscan/vuln/nuclei')"
      - "ExecCmd(\"timeout -k 1m {{nucleiTimeout}} {{Binaries}}/nuclei -H '{{defaultUA}}' -silent -c {{nucleiThreads}} -jsonl -severity '{{nucleiSeverity}}' -t ~/nuclei-templates/ -l {{inputFile}} -irr -o {{Output}}/vportscan/vuln/nuclei/{{Workspace}}-nuclei-json.txt\")"
    pconditions:
      - "FileLength('{{Output}}/vportscan/vuln/nuclei/{{Workspace}}-nuclei-json.txt') > 0"
    pscripts:
      - GenNucleiReport('{{Output}}/vportscan/vuln/nuclei/{{Workspace}}-nuclei-json.txt', '{{Output}}/vportscan/vuln/nuclei/{{Workspace}}-nuclei.html')
      # noti to telegram if anything found
      - ExecCmd("cat {{Output}}/vportscan/vuln/nuclei/{{Workspace}}-nuclei-json.txt | jq -r '[.info.severity,.\"template-id\",.\"matched-at\",.\"matched-name\"] | join(\" - \")' > {{Output}}/vportscan/vuln/nuclei/{{Workspace}}-nuclei-scan.txt")
      - TeleMessByFile("#sensitive", "{{Output}}/vportscan/vuln/nuclei/{{Workspace}}-nuclei-scan.txt")
      - Cat("{{Output}}/vportscan/vuln/nuclei/{{Workspace}}-nuclei-scan.txt")


  - required:
      - "{{Binaries}}/ffuf"
      - "{{inputFile}}"
    source: "{{inputFile}}"
    threads: '{{dirbThreads}}'
    commands:
      - "timeout -k 1m {{ffTimeout}} {{Binaries}}/ffuf -t {{ffThreads}} -H '{{defaultUA}}' -s -timeout 15 -ac -fc '429,403,404' -D -e 'asp,aspx,pl,php,html,htm,jsp,cgi' -of json -o {{Output}}/pdirectory/raw-[[._id_]].json -u '[[.line]]/FUZZ' -w {{wordlists}}:FUZZ >/dev/null 2>&1"

  # clean up and generate beautify report
  - scripts:
      - ExecCmd("awk '{print}' {{Output}}/pdirectory/raw-*.json > {{Output}}/pdirectory/summary-json-{{Workspace}}.txt")
      - CleanFFUFJson("{{Output}}/pdirectory/summary-json-{{Workspace}}.txt", "{{Output}}/pdirectory/beautify-{{Workspace}}.csv")
      - ExecCmd("cat {{Output}}/pdirectory/beautify-{{Workspace}}.csv | {{Binaries}}/csvtk pretty --no-header-row -I -s ' | ' -W 75 > {{Output}}/pdirectory/beautify-{{Workspace}}.txt")
      - TeleMessByFile("#dirb", "{{Output}}/pdirectory/beautify-{{Workspace}}.txt")
      - Cat('{{Output}}/pdirectory/beautify-{{Workspace}}.txt')